c
user
c
 expect(response).to be_successful
gym_class.id
response.body
response
params
c
gym_class
c
response.body
resposne.body
response.body
response.status
n
c
n
@gym_class.save!
@gym_class
n
params
n
c
@gym_class.save
@gym_class
n
c
response
params
c
n
gym_class
params
c
n
c
n
membership
n
membership
c
response
membership.id
params
membership.id
membership
n
membership
c
membership.id
membership
n
gymclass
trainer
gym
membership
c
response
params.id
c
gym_class
let(:gym_class) { FactoryBot.create :gym_class }
:gym_class
c
continue
n
 @membership.save
n
membership_params
n
continue
@membership.save!
@membership.save
n
params
 @membership = Membership.new(membership_params)
membership_params
n
post :create, params: params
n
params
n
params
gymclass
trainer
gym
continue
params
n
gymclass
trainer
gym
c
@membership.save
@membership.create
membership_params
@membership
n
c
params
@membership.create!
@membership.create
@membership.save
response
response.save
response.ave
response
@membership.save
n
c
@membership.save!
@membership.save
n
@membership.save
c
post :create, params: params
c
@membeship.save
n
c
Gym.id
Gym
GyM
Gyn
gym.id
gym
continue
@membership.save!
@membership.save
n
continue
n
@membership.save!
@membership.save
n
  @membership = Membership.new(membership_params)
membership_params
n
  post :create, params: params
continue
response.status
response
n
post :create, params: params
params
c
params
param
c
param
c
param
params
p
params
param
post :create
c
create
post
Membership.count
n
Mn
params
c
Gymclass
n
Gymclass
params
post
n
params
gym_class
n
c
cc
n
params
n
params
c
 GymClass.create(name: "yoga",capacity: 5, description:"this is best class",start_time:"06:00" ,end_time:"07:00")
params
n
params
c
gym_class
:gym_class
n
:gym_class
:gym_clas
c
params
n
c
n
 gym_classes.id
c
continue
n
continue
 get :show, params: {id: gym.id}
continue
response
gym.id
c
@m
n
  n
c
x.membership.name
x
n
c
n
nn
n
c
cc
@user.plans.first.membership.gym_class == @m.gym_class
n
@user.plans.first.membership.gym_class == @m.gym_class
@user.plans.first.membership.gym_class
@user.plans.first.membership
@user.plans
@user
n
c
n
c
@gym_class
n
@m
n
@m
@user
n
@m
@user
c
@m
n
c
Membership.last
all_membership.include?()
@user.memberships.first.gym_class.memberships
@user.memberships.first.gym_class
@user.memberships.first.class
@user.memberships.first
@user.memberships
@m.gym_class
@m.class
@user.memberships
@m
n
